{"version":3,"sources":["media/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Header.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Loader","map","movie","key","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","movieDetail","append_to_response","search","term","query","encodeURIComponent","tvApi","topRated","airingToday","showDetail","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","show","original_name","first_air_date","TVContainer","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","console","log","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.03b3e840.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n    <Container>\r\n        <Title>{title}</Title>\r\n        <Grid>{children}</Grid>\r\n    </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 28px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport default () => (\r\n    <Container>\r\n        <span role=\"img\" aria-label=\"Loading\">\r\n            ⏰\r\n    </span>\r\n    </Container>\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${props => props.color};\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n    <Container>\r\n        <Text color={color}>{text}</Text>\r\n    </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${props => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  bottom: 5px;\r\n  right: 5px;\r\n  position: absolute;\r\n  opacity: 0;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : require(\"../media/noPosterSmall.png\")\r\n          }\r\n        />\r\n\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ⭐️\r\n          </span>{\" \"}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\r\n    <>\r\n        <Helmet>\r\n            <title>Movies | Nomflix</title>\r\n        </Helmet>\r\n        {loading ? (\r\n            <Loader />\r\n        ) : (\r\n                <Container>\r\n                    <Helmet>\r\n                        <title>Movies | Nomflix</title>\r\n                    </Helmet>\r\n                    {nowPlaying && nowPlaying.length > 0 && (\r\n                        <Section title=\"Now Playing\">\r\n                            {nowPlaying.map(movie => (\r\n                                <Poster\r\n                                    key={movie.id}\r\n                                    id={movie.id}\r\n                                    imageUrl={movie.poster_path}\r\n                                    title={movie.original_title}\r\n                                    rating={movie.vote_average}\r\n                                    year={movie.release_date.substring(0, 4)}\r\n                                    isMovie={true}\r\n                                />\r\n                            ))}\r\n                        </Section>\r\n                    )}\r\n                    {upcoming && upcoming.length > 0 && (\r\n                        <Section title=\"Upcoming Movies\">\r\n                            {upcoming.map(movie => (\r\n                                <Poster\r\n                                    key={movie.id}\r\n                                    id={movie.id}\r\n                                    imageUrl={movie.poster_path}\r\n                                    title={movie.original_title}\r\n                                    rating={movie.vote_average}\r\n                                    year={movie.release_date.substring(0, 4)}\r\n                                    isMovie={true}\r\n                                />\r\n                            ))}\r\n                        </Section>\r\n                    )}\r\n                    {popular && popular.length > 0 && (\r\n                        <Section title=\"Popular Movies\">\r\n                            {popular.map(movie => (\r\n                                <Poster\r\n                                    key={movie.id}\r\n                                    id={movie.id}\r\n                                    imageUrl={movie.poster_path}\r\n                                    title={movie.original_title}\r\n                                    rating={movie.vote_average}\r\n                                    year={movie.release_date.substring(0, 4)}\r\n                                    isMovie={true}\r\n                                />\r\n                            ))}\r\n                        </Section>\r\n                    )}\r\n                    {error && <Message color=\"#e74c3c\" text={error} />}\r\n                </Container>\r\n            )}\r\n    </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n    nowPlaying: PropTypes.array,\r\n    popular: PropTypes.array,\r\n    upcoming: PropTypes.array,\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string\r\n};\r\n\r\nexport default HomePresenter;\r\n","import axios from \"axios\";\r\n\r\nconst apiKey = \"33e0b924182172ba4521b386bc689611\";\r\nconst language = \"en-US\"; //   ja-JP\r\n\r\nconst api = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3/\",\r\n    params: {\r\n        api_key: apiKey,\r\n        language: language\r\n    }\r\n});\r\n\r\nexport const moviesApi = {\r\n    nowPlaying: () => api.get(\"movie/now_playing\"),\r\n    upcoming: () => api.get(\"movie/upcoming\"),\r\n    popular: () => api.get(\"movie/popular\"),\r\n    movieDetail: id =>\r\n        api.get(`movie/${id}`, {\r\n            params: {\r\n                append_to_response: \"videos\"\r\n            }\r\n        }),\r\n    search: term =>\r\n        api.get(\"search/movie\", {\r\n            params: {\r\n                query: encodeURIComponent(term)\r\n            }\r\n        })\r\n};\r\n\r\nexport const tvApi = {\r\n    topRated: () => api.get(\"tv/top_rated\"),\r\n    popular: () => api.get(\"tv/popular\"),\r\n    airingToday: () => api.get(\"tv/airing_today\"),\r\n    showDetail: id =>\r\n        api.get(`tv/${id}`, {\r\n            params: {\r\n                append_to_response: \"videos\"\r\n            }\r\n        }),\r\n    search: term =>\r\n        api.get(\"search/tv\", {\r\n            params: {\r\n                query: encodeURIComponent(term)\r\n            }\r\n        })\r\n};","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { moviesApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        nowPlaying: null,\r\n        upcoming: null,\r\n        popular: null,\r\n        error: null,\r\n        loading: true\r\n    };\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const {\r\n                data: { results: nowPlaying }\r\n            } = await moviesApi.nowPlaying();\r\n            const {\r\n                data: { results: upcoming }\r\n            } = await moviesApi.upcoming();\r\n            const {\r\n                data: { results: popular }\r\n            } = await moviesApi.popular();\r\n            this.setState({\r\n                nowPlaying,\r\n                upcoming,\r\n                popular\r\n            });\r\n        } catch {\r\n            this.setState({\r\n                error: \"Can't find movie information.\"\r\n            });\r\n        } finally {\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n        return (\r\n            <HomePresenter\r\n                nowPlaying={nowPlaying}\r\n                upcoming={upcoming}\r\n                popular={popular}\r\n                error={error}\r\n                loading={loading}\r\n            />\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\r\n    <>\r\n        <Helmet>\r\n            <title>TV Shows | Nomflix</title>\r\n        </Helmet>\r\n        {loading ? (\r\n            <Loader />\r\n        ) : (\r\n                <Container>\r\n                    {topRated && topRated.length > 0 && (\r\n                        <Section title=\"Top Rated Shows\">\r\n                            {topRated.map(show => (\r\n                                <Poster\r\n                                    key={show.id}\r\n                                    id={show.id}\r\n                                    imageUrl={show.poster_path}\r\n                                    title={show.original_name}\r\n                                    rating={show.vote_average}\r\n                                    year={show.first_air_date.substring(0, 4)}\r\n                                />\r\n                            ))}\r\n                        </Section>\r\n                    )}\r\n                    {popular && popular.length > 0 && (\r\n                        <Section title=\"Popular Shows\">\r\n                            {popular.map(show => (\r\n                                <Poster\r\n                                    key={show.id}\r\n                                    id={show.id}\r\n                                    imageUrl={show.poster_path}\r\n                                    title={show.original_name}\r\n                                    rating={show.vote_average}\r\n                                    year={show.first_air_date.substring(0, 4)}\r\n                                />\r\n                            ))}\r\n                        </Section>\r\n                    )}\r\n                    {airingToday && airingToday.length > 0 && (\r\n                        <Section title=\"Airing Today\">\r\n                            {airingToday.map(show => (\r\n                                <Poster\r\n                                    key={show.id}\r\n                                    id={show.id}\r\n                                    imageUrl={show.poster_path}\r\n                                    title={show.original_name}\r\n                                    rating={show.vote_average}\r\n                                    year={show.first_air_date.substring(0, 4)}\r\n                                />\r\n                            ))}\r\n                        </Section>\r\n                    )}\r\n                    {error && <Message color=\"#e74c3c\" text={error} />}\r\n                </Container>\r\n            )}\r\n    </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n    topRated: PropTypes.array,\r\n    popular: PropTypes.array,\r\n    airingToday: PropTypes.array,\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;\r\n","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        topRated: null,\r\n        popular: null,\r\n        airingToday: null,\r\n        loading: true,\r\n        error: null\r\n    };\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const {\r\n                data: { results: topRated }\r\n            } = await tvApi.topRated();\r\n            const {\r\n                data: { results: popular }\r\n            } = await tvApi.popular();\r\n            const {\r\n                data: { results: airingToday }\r\n            } = await tvApi.airingToday();\r\n            this.setState({ topRated, popular, airingToday });\r\n        } catch {\r\n            this.setState({\r\n                error: \"Can't find TV information.\"\r\n            });\r\n        } finally {\r\n            this.setState({ loading: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { topRated, popular, airingToday, loading, error } = this.state;\r\n        return (\r\n            <TVPresenter\r\n                topRated={topRated}\r\n                popular={popular}\r\n                airingToday={airingToday}\r\n                loading={loading}\r\n                error={error}\r\n            />\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 3px solid\r\n    ${props => (props.current ? \"#3498db\" : \"transparent\")};\r\n  transition: border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n    <Header>\r\n        <List>\r\n            <Item current={pathname === \"/\"}>\r\n                <SLink to=\"/\">Movies</SLink>\r\n            </Item>\r\n            <Item current={pathname === \"/tv\"}>\r\n                <SLink to=\"/tv\">TV</SLink>\r\n            </Item>\r\n            <Item current={pathname === \"/search\"}>\r\n                <SLink to=\"/search\">Search</SLink>\r\n            </Item>\r\n        </List>\r\n    </Header>\r\n));\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Section from \"../../Components/Section\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n    movieResults,\r\n    tvResults,\r\n    loading,\r\n    searchTerm,\r\n    handleSubmit,\r\n    error,\r\n    updateTerm\r\n}) => (\r\n        <Container>\r\n            <Helmet>\r\n                <title>Search | Nomflix</title>\r\n            </Helmet>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Input\r\n                    placeholder=\"Search Movies or TV Shows...\"\r\n                    value={searchTerm}\r\n                    onChange={updateTerm}\r\n                />\r\n            </Form>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : (\r\n                    <>\r\n                        {movieResults && movieResults.length > 0 && (\r\n                            <Section title=\"Movie Results\">\r\n                                {movieResults.map(movie => (\r\n                                    <Poster\r\n                                        key={movie.id}\r\n                                        id={movie.id}\r\n                                        imageUrl={movie.poster_path}\r\n                                        title={movie.original_title}\r\n                                        rating={movie.vote_average}\r\n                                        year={movie.release_date.substring(0, 4)}\r\n                                        isMovie={true}\r\n                                    />\r\n                                ))}\r\n                            </Section>\r\n                        )}\r\n                        {tvResults && tvResults.length > 0 && (\r\n                            <Section title=\"TV Show Results\">\r\n                                {tvResults.map(show => (\r\n                                    <Poster\r\n                                        key={show.id}\r\n                                        id={show.id}\r\n                                        imageUrl={show.poster_path}\r\n                                        title={show.original_name}\r\n                                        rating={show.vote_average}\r\n                                        year={show.first_air_date.substring(0, 4)}\r\n                                    />\r\n                                ))}\r\n                            </Section>\r\n                        )}\r\n                        {error && <Message color=\"#e74c3c\" text={error} />}\r\n                        {tvResults &&\r\n                            movieResults &&\r\n                            tvResults.length === 0 &&\r\n                            movieResults.length === 0 && (\r\n                                <Message text=\"Nothing found\" color=\"#95a5a6\" />\r\n                            )}\r\n                    </>\r\n                )}\r\n        </Container>\r\n    );\r\n\r\nSearchPresenter.propTypes = {\r\n    movieResults: PropTypes.array,\r\n    tvResults: PropTypes.array,\r\n    error: PropTypes.string,\r\n    searchTerm: PropTypes.string,\r\n    loading: PropTypes.bool.isRequired,\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    updateTerm: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        movieResults: null,\r\n        tvResults: null,\r\n        searchTerm: \"\",\r\n        loading: false,\r\n        error: null\r\n    };\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        const { searchTerm } = this.state;\r\n        if (searchTerm !== \"\") {\r\n            this.searchByTerm();\r\n        }\r\n    };\r\n\r\n    updateTerm = event => {\r\n        const {\r\n            target: { value }\r\n        } = event;\r\n        this.setState({\r\n            searchTerm: value\r\n        });\r\n    };\r\n\r\n    searchByTerm = async () => {\r\n        const { searchTerm } = this.state;\r\n        this.setState({ loading: true });\r\n        try {\r\n            const {\r\n                data: { results: movieResults }\r\n            } = await moviesApi.search(searchTerm);\r\n            const {\r\n                data: { results: tvResults }\r\n            } = await tvApi.search(searchTerm);\r\n            this.setState({\r\n                movieResults,\r\n                tvResults\r\n            });\r\n        } catch {\r\n            this.setState({ error: \"Can't find results.\" });\r\n        } finally {\r\n            this.setState({ loading: false });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { movieResults, tvResults, searchTerm, loading, error } = this.state;\r\n        return (\r\n            <SearchPresenter\r\n                movieResults={movieResults}\r\n                tvResults={tvResults}\r\n                loading={loading}\r\n                error={error}\r\n                searchTerm={searchTerm}\r\n                handleSubmit={this.handleSubmit}\r\n                updateTerm={this.updateTerm}\r\n            />\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"../../Components/Loader\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 50%;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, loading, error }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading | Nomflix</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : (\r\n      <Container>\r\n        <Helmet>\r\n          <title>\r\n            {result.original_title ? result.original_title : result.original_name}{\" \"}\r\n            | Nomflix\r\n        </title>\r\n        </Helmet>\r\n        <Backdrop\r\n          bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n        />\r\n        <Content>\r\n          <Cover\r\n            bgImage={\r\n              result.poster_path\r\n                ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n                : require(\"../../media/noPosterSmall.png\")\r\n            }\r\n          />\r\n          <Data>\r\n            <Title>\r\n              {result.original_title\r\n                ? result.original_title\r\n                : result.original_name}\r\n            </Title>\r\n            <ItemContainer>\r\n              <Item>\r\n                {result.release_date\r\n                  ? result.release_date.substring(0, 4)\r\n                  : result.first_air_date.substring(0, 4)}\r\n              </Item>\r\n              <Divider>•</Divider>\r\n              <Item>\r\n                {result.runtime ? result.runtime : result.episode_run_time[0]} min\r\n            </Item>\r\n              <Divider>•</Divider>\r\n              <Item>\r\n                {result.genres &&\r\n                  result.genres.map((genre, index) =>\r\n                    index === result.genres.length - 1\r\n                      ? genre.name\r\n                      : `${genre.name} / `\r\n                  )}\r\n              </Item>\r\n            </ItemContainer>\r\n            <Overview>{result.overview}</Overview>\r\n          </Data>\r\n        </Content>\r\n      </Container>\r\n    );\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const {\r\n            location: { pathname }\r\n        } = props;\r\n        this.state = {\r\n            result: null,\r\n            error: null,\r\n            loading: true,\r\n            isMovie: pathname.includes(\"/movie/\")\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const {\r\n            match: {\r\n                params: { id }\r\n            },\r\n            history: { push }\r\n        } = this.props;\r\n        const { isMovie } = this.state;\r\n        const parsedId = parseInt(id);\r\n        if (isNaN(parsedId)) {\r\n            return push(\"/\");\r\n        }\r\n        let result = null;\r\n        try {\r\n            if (isMovie) {\r\n                // ({ data: result } = await moviesApi.movieDetail(parsedId));\r\n                ({ data: result } = await moviesApi.movieDetail(parsedId));\r\n            } else {\r\n                ({ data: result } = await tvApi.showDetail(parsedId));\r\n            }\r\n        } catch (e) {\r\n            this.setState({ error: \"Can't find anything.\" });\r\n            console.log(\"catch error\", id)\r\n        } finally {\r\n            this.setState({ loading: false, result });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { result, error, loading } = this.state;\r\n        console.log(\"result : \", result);\r\n        return <DetailPresenter result={result} error={error} loading={loading} />\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n    HashRouter as Router,\r\n    Route,\r\n    Redirect,\r\n    Switch\r\n} from \"react-router-dom\";\r\nimport Home from \"../Routes/Home\";\r\nimport TV from \"../Routes/TV\";\r\nimport Header from \"./Header\";\r\nimport Search from \"../Routes/Search\";\r\nimport Detail from \"../Routes/Detail\";\r\n\r\nexport default () => (\r\n    <Router>\r\n        <>\r\n            <Header />\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Home} />\r\n                <Route path=\"/tv\" component={TV} />\r\n                <Route path=\"/search\" component={Search} />\r\n                <Route path=\"/movie/:id\" component={Detail} />\r\n                <Route path=\"/show/:id\" component={Detail} />\r\n                <Redirect from=\"*\" to=\"/\" />\r\n            </Switch>\r\n        </>\r\n    </Router>\r\n);\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size:12px;\r\n        background-color:rgba(20, 20, 20, 1);\r\n        color:white;\r\n        padding-top:50px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;\r\n","import React, { Component } from \"react\";\r\nimport Router from \"./Router\";\r\nimport GlobalStyles from \"./GlobalStyles\";\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <Router />\r\n                <GlobalStyles />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './Components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}